---
import TypeImage from "@components/portfolio/TypeRessource/TypeImage.astro";
import TypeVideo from "@components/portfolio/TypeRessource/TypeVideo.astro";

interface Props {
    project: {
        title: string;
        description: string;
        ressource: string;
        skills: string[];
        tools: string[];
        type: string;
        date: string;
    };
}

const { project } = Astro.props;

const selectedType = "Type" + project.type;
---

<div id="project-page">
    <h1>{project.title}</h1>
    <div id="ressource_content">
        {selectedType === "TypeImage" && <TypeImage ressource={project.ressource}/>}
        {selectedType === "TypeVideo" && <TypeVideo />}
    </div>
    <p class="date">{project.date}</p>

    <div class="description">
        <h2 class="subtitle">Description</h2>
        <p>{project.description}</p>
    </div>

    <div class="tags">
        <div class="skills">
            <h2 class="subtitle">Comp√©tences</h2>
            <ul>{project.skills.map((skill) => (
                <li><p>{skill}</p></li>
            ))}</ul>
        </div>
        <div class="tools">
            <h2 class="subtitle">Outils</h2>
            <ul>{project.tools.map((tool) => (
                <li><p>{tool}</p></li>
            ))}</ul>
        </div>
    </div>
</div>

<style>
    #project-page {
        padding: 5vh 5% 5vh 5%;
        max-width: 1920px;
        margin:auto;
        overflow-x: hidden;
    }

    h1, h2 {
        font-size: min(5vw, 24px);
    }

    p {
        font-size: min(4vw, 16px);
    }

    #ressource_content {
        display: flex;
        justify-content: center;
        max-height: 75vh;
        background-color: #242424;
    }

    .date{
        direction: rtl;
        margin: 5px 0 35px 0;
    }

    .subtitle {
        font-family: 'Poppins Bold';
        margin-bottom: 20px;
        position: relative;
    }

    h2::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 2px;
        bottom: -5px;
        left: 0;
        background: linear-gradient(135deg, rgb(255, 255, 255) 0%, rgb(51, 178, 216) 5%, rgba(245,111,232,0) 70%);
        transform-origin: bottom;
    }

    .description {
        margin-bottom: 35px;
    }

    .tags {
        display: grid;
        grid-template-columns: 1fr 1fr;
    }

    .tools {
        direction: rtl;
    }

    .tools h2::after {
        background: linear-gradient(135deg, rgba(245,111,232,0) 30%, rgb(51, 178, 216) 95%, rgb(255, 255, 255) 100%);
    }

    ul {
        display: flex;
        flex-wrap: wrap;
    }
    
    .tags p {
        width: fit-content;
        padding: 4px;
        background-color: #1EB1D2;
        border-radius: 5px;
    }

    .tools ul {
        direction: rtl;
    }

    .tools p {
        background-color: #9D51C0;
    }

    li {
        margin: 2.5px;
    }

    @media screen and (max-aspect-ratio: 1/1) {
        .tags {
            grid-template-columns: 1fr;
        }

        .tools {
            margin-top: 35px;
            direction: ltr;
        }

        .tools h2::after {
            background: linear-gradient(135deg, rgb(255, 255, 255) 0%, rgb(51, 178, 216) 5%, rgba(245,111,232,0) 70%);
        }

        .tools ul {
            direction: ltr;
        }
    }
</style>
