---
import DotMenu from "@icons/dot_menu.svg";
import CrystalIcon from "@icons/crystal.svg";
---


<menu-button>
    <ul class="menu-options">
        <img class="not-reversed" src={CrystalIcon}>
        <li><a href="/about">Ã€ propos</a></li>
        <li><a href="/cv">CV</a></li>
        <li><a href="/portfolio">Portfolio</a></li>
        <li><a href="/contact">Contact</a></li>
        <img class="reversed" src={CrystalIcon}>
    </ul>
    <button class="dotbutton"><img src={DotMenu}></button>
</menu-button>

<script>
    class MenuButton extends HTMLElement {
        constructor() {
            super();

            const button = this.querySelector('button');
            const menu = this.querySelector('ul');

            let MenuIsOpen = false;
            
            button?.addEventListener('click', () => {
                MenuIsOpen ? menu?.classList.remove('menuopen') : menu?.classList.add('menuopen');
                MenuIsOpen = !MenuIsOpen;
            });
        }
    }

    customElements.define('menu-button', MenuButton);
</script>
  
<style>
    menu-button {
        display: none;
    }

    .dotbutton {
        position: fixed;
        top: 25px;
        right: 40px;
        background: none;
        border: none;
        cursor: pointer;
    }

    .menu-options {
        position: fixed;
        top: 0;
        left: 0;
        display: none;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        width: 100vw;
        background: rgba(0, 0, 0, 0.9);
    }

    .menuopen {
        display: flex;
    }

    .menuopen li {
        display: flex;
        position: relative;
        justify-content: center;
        align-items: center;
        margin: 25px 0 25px 0;
        width: 190px;
        height: 50px;
    }

    .menuopen li::before{
        content:"";
        position:absolute;
        z-index:-1;
        inset:0;
        padding: 1px;
        border-radius: 35px;
        background: linear-gradient(225deg, rgb(255, 255, 255) 20%, rgb(192, 240, 255) 35%, rgba(245,111,232,0) 60%);
        --grad: linear-gradient(red, red);
        -webkit-mask: var(--grad) content-box, var(--grad);
        -webkit-mask-composite: destination-out;
        mask-composite: exclude;
    }

    .menuopen a {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
    }

    .not-reversed {
        animation: float 3s infinite alternate ease-in-out;
    }

    @keyframes float {
        0% {
            transform: translateY(0);
        }

        100% {
            transform: translateY(-10px);
        }
    }

    .reversed{
        animation: float_reversed 3s infinite alternate-reverse ease-in-out;
    }

    @keyframes float_reversed {
        0% {
            transform: translateY(0) rotate(180deg);
        }

        100% {
            transform: translateY(-10px) rotate(180deg);
        }
    }

    @media screen and (max-width: 1000px) {
        menu-button {
            display: block;
        }
    }
</style>
